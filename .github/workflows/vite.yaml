name: github pages

on:
  push:
    branches: [ "*" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0

      - name: Set Timezone
        run: sudo timedatectl set-timezone Asia/Shanghai

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/apt-archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/texlive.list') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: get a index page
        run: cp ./README.md ./index.md
      - name: Install dependencies
        run: pnpm install

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '3.7'

      - name: install texlive deps
        run: |
          export DEBIAN_FRONTEND=noninteractive
          mkdir -p ~/.cache/apt-archives
          sudo apt-get update
          sudo apt-get install -y $(cat .vitepress/texlive.list | tr '\n' ' ')
          sudo cp /var/cache/apt/archives/*.deb ~/.cache/apt-archives/ || true
          sudo chown -R $(whoami):$(whoami) ~/.cache/apt-archives || true

      - name: generate PDFs
        run: |
          pnpm \
            exec node \
            --experimental-strip-types \
            --experimental-transform-types \
              ./.vitepress/run-pdfs.ts

      - name: build
        run: pnpm run docs:build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.vitepress/dist

  # Deployment job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
